services:
  # create a SuperLink service
  superlink:
    image: flwr/superlink:${FLWR_VERSION:-1.17.0}
    container_name: SuperLink
    environment:
      - FLWR_LOG_LEVEL=ERROR
    command:
      - --insecure
      - --isolation
      - process
    ports:
      - 9093:9093

  # create a ServerApp service
  serverapp-1:
    image: flwr_serverapp:0.0.5
    command:
      - --insecure
      - --serverappio-api-address
      - superlink:9091
    restart: on-failure:3
    volumes:
      - "../output:/app/output"
    environment:
      - FLWR_LOG_LEVEL=ERROR
    container_name: ServerApp-1
    depends_on:
      - superlink

  # create 50 SuperNode services with different node configs
  
  supernode-1:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-1
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9094
      - --isolation
      - process
      - --node-config
      - "partition-id=0 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-2:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-2
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9095
      - --isolation
      - process
      - --node-config
      - "partition-id=1 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-3:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-3
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9096
      - --isolation
      - process
      - --node-config
      - "partition-id=2 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-4:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-4
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9097
      - --isolation
      - process
      - --node-config
      - "partition-id=3 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-5:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-5
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9098
      - --isolation
      - process
      - --node-config
      - "partition-id=4 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-6:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-6
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9099
      - --isolation
      - process
      - --node-config
      - "partition-id=5 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-7:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-7
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9100
      - --isolation
      - process
      - --node-config
      - "partition-id=6 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-8:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-8
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9101
      - --isolation
      - process
      - --node-config
      - "partition-id=7 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-9:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-9
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9102
      - --isolation
      - process
      - --node-config
      - "partition-id=8 num-partitions=10"
    depends_on:
      - superlink
  
  supernode-10:
    image: flwr/supernode:${FLWR_VERSION:-1.17.0}
    container_name: SuperNode-10
    command:
      - --insecure
      - --superlink
      - superlink:9092
      - --clientappio-api-address
      - 0.0.0.0:9103
      - --isolation
      - process
      - --node-config
      - "partition-id=9 num-partitions=10"
    depends_on:
      - superlink
  

  # create 10 ClientApp services
  
  clientapp-1:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-1:9094
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-1
    depends_on:
      - supernode-1
  
  clientapp-2:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-2:9095
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-2
    depends_on:
      - supernode-2
  
  clientapp-3:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-3:9096
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-3
    depends_on:
      - supernode-3
  
  clientapp-4:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-4:9097
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-4
    depends_on:
      - supernode-4
  
  clientapp-5:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-5:9098
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-5
    depends_on:
      - supernode-5
  
  clientapp-6:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-6:9099
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-6
    depends_on:
      - supernode-6
  
  clientapp-7:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-7:9100
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-7
    depends_on:
      - supernode-7
  
  clientapp-8:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-8:9101
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-8
    depends_on:
      - supernode-8
  
  clientapp-9:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-9:9102
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-9
    depends_on:
      - supernode-9
  
  clientapp-10:
    image: flwr_clientapp:0.0.5
    command:
      - --insecure
      - --clientappio-api-address
      - supernode-10:9103
    deploy:
      resources:
        limits:
          cpus: "16"
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    stop_signal: SIGINT
    container_name: clientApp-10
    depends_on:
      - supernode-10
  

  master:
    build:
      context: ${PROJECT_DIR:-../master_service}  # Path to your master service code
      dockerfile_inline: |
        FROM python:3.11-slim

        # Set the working directory in the container
        WORKDIR /app

        # Copy requirements.txt and install dependencies
        COPY requirements.txt . 
        RUN pip install --no-cache-dir -r requirements.txt

        # Copy the rest of the app code into the container
        COPY . . 
        # Expose Flask API port
        EXPOSE 5000

        # Set the command to run your Flask app
        CMD ["python", "master_app.py"]
    container_name: Master
    environment:
      - FLWR_LOG_LEVEL=ERROR
    ports:
      - "5000:5000"  # Expose Flask API to the host on port 5000
    volumes:
      - "../../flower-app:/app/flower-app"  # Mount the code directory to the container